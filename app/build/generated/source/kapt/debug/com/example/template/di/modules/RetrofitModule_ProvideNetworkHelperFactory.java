// Generated by Dagger (https://dagger.dev).
package com.example.template.di.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlins.skills.remember.utils.NetworkHelper;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("com.example.template.di.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideNetworkHelperFactory implements Factory<NetworkHelper> {
  private final RetrofitModule module;

  private final Provider<Context> contextProvider;

  public RetrofitModule_ProvideNetworkHelperFactory(RetrofitModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public NetworkHelper get() {
    return provideNetworkHelper(module, contextProvider.get());
  }

  public static RetrofitModule_ProvideNetworkHelperFactory create(RetrofitModule module,
      Provider<Context> contextProvider) {
    return new RetrofitModule_ProvideNetworkHelperFactory(module, contextProvider);
  }

  public static NetworkHelper provideNetworkHelper(RetrofitModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideNetworkHelper(context));
  }
}
